# filters subnetworks for specific repo or rules depending on source subnetwork

geo $site1 {
       default 0;
       192.168.199.0/24 1;
    }

 geo $site2 {
       default 0;
       192.168.198.0/24 1;
    }


server {


    listen                      80;

    listen                      443 ssl;
    server_name                 _;

    ssl_certificate             "/opt/wapt/waptserver/ssl/cert.pem";
    ssl_certificate_key         "/opt/wapt/waptserver/ssl/key.pem";
    ssl_protocols               TLSv1.2;
    ssl_dhparam                 /etc/ssl/certs/dhparam.pem;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_stapling                on;
    ssl_stapling_verify         on;
    ssl_session_cache           none;
    ssl_session_tickets         off;

    gzip_min_length     1000;
    gzip_buffers        4 8k;
    gzip_http_version   1.0;
    gzip_disable        "msie6";
    gzip_types          text/plain text/css application/json;
    gzip_vary           on;

    ssl_client_certificate "/opt/wapt/conf/wapt-serverauth-ca.crt";
    ssl_verify_client optional;

    index index.html;

    location /static {
        alias "/opt/wapt/waptserver/static";
    }


######################################################


    location / {
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        client_max_body_size 4096m;
        client_body_timeout 1800;

        location ~ ^/(wapt|wapt-host|waptwua|wapt-diff-repos)/(.*)$ {
            proxy_set_header Cache-Control "store, no-cache, must-revalidate, post-check=0, pre-check=0";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "Sun, 19 Nov 1978 05:00:00 GMT";

            proxy_set_header X-Ssl-Authenticated $ssl_client_verify;
            proxy_set_header X-Ssl-Client-DN $ssl_client_s_dn;
            if ($ssl_client_verify != SUCCESS) {
               return 401;
            }
            if ($site1) {
                rewrite ^ https://wapt.tranquil.it$request_uri;
                }

            if ($site2) {
                rewrite ^ https://wapt2.tranquil.it$request_uri;
                }

            rewrite ^/(wapt|wapt-host|waptwua)/(.*)$ /$1/$2 break;
            root "/var/www";
        }


        # kerberos auth
        location /add_host_kerberos {
            auth_gss on;
            auth_gss_keytab  /etc/nginx/http-krb5.keytab;
            proxy_pass http://127.0.0.1:8080;
        }

        # basic auth
        location ~ ^/(add_host|ping)$ {
            proxy_pass http://127.0.0.1:8080;
        }

        location /wapt-host/Packages {
                return 403;
        }

        location / {
            proxy_set_header X-Ssl-Authenticated $ssl_client_verify;
            proxy_set_header X-Ssl-Client-DN $ssl_client_s_dn;
            if ($ssl_client_verify != SUCCESS) {
               return 401;
            }
            proxy_pass http://127.0.0.1:8080;

        }

        location /socket.io {
            proxy_set_header X-Ssl-Authenticated $ssl_client_verify;
            proxy_set_header X-Ssl-Client-DN $ssl_client_s_dn;
            if ($ssl_client_verify != SUCCESS) {
               return 401;
            }

            proxy_http_version 1.1;
            proxy_buffering off;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://127.0.0.1:8080/socket.io;

        }
    }

}
