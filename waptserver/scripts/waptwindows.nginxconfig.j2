#user  nobody;
worker_processes  1;

error_log  "{{ wapt_root_dir}}/waptserver/nginx/logs/error.log";

pid         "{{ wapt_root_dir}}/waptserver/nginx/logs/nginx.pid";

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  "{{ wapt_root_dir}}/waptserver/nginx/logs/access.log";

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    {% if force_https %}
    server {
        listen                      {{ nginx_http }};
        listen                      [::]:{{ nginx_http }} ;
        server_name                 _;
        return 301                  https://$host$request_uri;
    }

    {% endif %} {# if force_https #}
    server {

    {% if not force_https %}
        listen                      {{ nginx_http }} ;
    {% endif %} {# if force_https #}
        listen                      {{ nginx_https }} ssl;
        server_name                 _;

        ssl_certificate             "{{ wapt_ssl_cert_file }}";
        ssl_certificate_key         "{{ wapt_ssl_key_file }}";
        ssl_protocols               TLSv1.2;
        ssl_prefer_server_ciphers   on;
        ssl_ciphers                 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_stapling_verify         on;
        ssl_session_cache           none;
        ssl_session_tickets         off;

        gzip_min_length     1000;
        gzip_buffers        4 8k;
        gzip_http_version   1.0;
        gzip_disable        "msie6";
        gzip_types          text/plain text/css application/json;
        gzip_vary           on;

        index index.html;

        location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 4096m;
            client_body_timeout 1800;

            location ~ ^/(wapt|wapt-host)/(.*)$ {
                proxy_set_header Cache-Control "store, no-cache, must-revalidate, post-check=0, pre-check=0";
                proxy_set_header Pragma "no-cache";
                proxy_set_header Expires "Sun, 19 Nov 1978 05:00:00 GMT";

                rewrite ^/(wapt|wapt-host)/(.*)$ /$1/$2 break;
                root "{{ wapt_repository_path }}";
            }

        {% if use_kerberos  %}
            location /add_host_kerberos {
                auth_gss on;
                auth_gss_keytab {{ wapt_root_dir}}/waptserver/nginx/http-krb5.keytab;
                proxy_pass http://127.0.0.1:{{waptserver_port}};
            }
        {% else %}
            location /add_host_kerberos {
                return 403;
            }
        {% endif %} {# if use_kerberos #}

            location /wapt-host/Packages {
                    return 403;
            }

            location / {
                proxy_pass http://127.0.0.1:{{waptserver_port}};
            }

            location /socket.io {
                proxy_http_version 1.1;
                proxy_buffering off;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_pass http://127.0.0.1:{{waptserver_port}}/socket.io;
            }
        }
    }
}
