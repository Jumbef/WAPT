{% if force_https %}

server {
    listen                      80;
    listen                      [::]:80;
    server_name                 _;
    return 301                  https://$host$request_uri;
}

{% endif %} {# if force_https #}

server {

{% if force_https == False %}
    listen                      80;
{% endif %} {# if force_https #}
    listen                      443 ssl;
    server_name                 _;

    ssl_certificate             "{{ wapt_ssl_cert_file }}";
    ssl_certificate_key         "{{ wapt_ssl_key_file }}";
    ssl_protocols               TLSv1.2;
    ssl_dhparam                 /etc/ssl/certs/dhparam.pem;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_stapling                on;
    ssl_stapling_verify         on;
    ssl_session_cache           none;
    ssl_session_tickets         off;

{% if clients_signing_certificate %}
    #ssl_client_certificate "{{ clients_signing_certificate }}";
    #ssl_verify_client optional;
{% endif %}

    gzip_min_length     1000;
    gzip_buffers        4 8k;
    gzip_http_version   1.0;
    gzip_disable        "msie6";
    gzip_types          text/plain text/css application/json;
    gzip_vary           on;

    index index.html;


    location / {
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        client_max_body_size 4096m;
        client_body_timeout 1800;

        location /static {
            alias "{{ wapt_root_dir}}/waptserver/static";
        }

        location ~ ^/(wapt/waptsetup-tis.exe|wapt/waptagent.exe|wapt/waptdeploy.exe|sync.json)$ {
            root "{{ wapt_repository_path }}";
        }

        location ~ ^/(wapt/.*|wapt-host/.*|waptwua/.*)$ {
    {% if use_ssl_client_auth %}
            proxy_set_header X-Ssl-Authenticated $ssl_client_verify;
            proxy_set_header X-Ssl-Client-DN $ssl_client_s_dn;
            if ($ssl_client_verify != SUCCESS) {
               return 401;
            }
    {% endif %}
            root "{{ wapt_repository_path }}";
        }

        location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 4096m;
            client_body_timeout 1800;

    {% if use_kerberos  %}
            location /add_host_kerberos {
                auth_gss on;
                auth_gss_keytab  /etc/nginx/http-krb5.keytab;
                proxy_pass http://127.0.0.1:{{waptserver_port}};
            }
    {% else %}
            location /add_host_kerberos {
                return 403;
            }
    {% endif %} {# if use_kerberos #}

            location /wapt-host/Packages {
                    return 403;
            }

            location / {
    {% if use_ssl_client_auth %}
                proxy_set_header X-Ssl-Authenticated $ssl_client_verify;
                proxy_set_header X-Ssl-Client-DN $ssl_client_s_dn;
                if ($ssl_client_verify != SUCCESS) {
                   return 401;
                }
    {% endif %}
                proxy_pass http://127.0.0.1:{{waptserver_port}};
            }

            location /socket.io {
                proxy_http_version 1.1;
                proxy_buffering off;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_pass http://127.0.0.1:{{waptserver_port}}/socket.io;
            }
        }
    }
}
