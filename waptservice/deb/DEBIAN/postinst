#!/usr/bin/python

import subprocess
import os
import shutil
import sys
import time


def run(*args, **kwargs):
    return subprocess.check_output(*args, shell=True, **kwargs)

run('systemctl enable waptservice')

print("Setting up pid and log files")
run('touch /var/log/waptservice.log')
run('touch /var/run/waptservice.pid')
run('chown root:root /var/log/waptservice.log')
run('chmod 640 /var/log/waptservice.log')

# minimal .profile script to setup python path
open('/opt/wapt/.profile','w').write("""#
export PYTHONHOME=/opt/wapt
export PYTHONPATH=/opt/wapt
export PATH=/opt/wapt/bin:$PATH
""")

# relocating waptserver.ini config file to the new location

print("Tightening up permissions")
run('find /opt/wapt -type f -exec chmod 644 {} +')
run('find /opt/wapt -type d ! -name conf ! -name log -exec chmod 755 {} +')
run('find /opt/wapt -type d ! -name conf ! -name log -exec chown root:root {} +')
run('chown -R root:root /opt/wapt/conf')
run('chown -R root:root /opt/wapt/db')
run('chmod 750 /opt/wapt/conf')
run('chown -R root:root /opt/wapt/log')
run('chmod 755 /opt/wapt/log')
run('chmod 755 /opt/wapt/bin/*')
if not(os.path.isdir('/opt/wapt/private')):
    os.mkdir('/opt/wapt/private')
run('chown -R root:root /opt/wapt/private')
run('chmod -R 700 /opt/wapt/private')

if not(os.path.isdir('/opt/wapt/ssl')):
    os.mkdir('/opt/wapt/ssl')

if not(os.path.isdir('/opt/wapt/ssl/server')):
    os.mkdir('/opt/wapt/ssl')

os.chmod('/opt/wapt/runwaptservice.sh',0o755)
os.chmod('/usr/bin/waptpython',0o755)
os.chmod('/opt/wapt/wapt-get.sh',0o755)

os.symlink('/opt/wapt/runwaptservice.sh','/usr/bin/waptservice')
os.symlink('/opt/wapt/wapt-get.sh','/usr/bin/wapt-get')

# restart server if conf file is there and if it was already running

if os.path.exists('/opt/wapt/wapt-get.ini'):
    print("Restarting Agent")
    try:
        run('systemctl restart waptservice.service')
    except:
        pass