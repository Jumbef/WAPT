# -*- coding: utf-8 -*-
# Created by makepy.py version 0.5.01
# By python version 2.7.14 (v2.7.14:84471935ed, Sep 16 2017, 20:19:30) [MSC v.1500 32 bit (Intel)]
# From type library '{B596CC9F-56E5-419E-A622-E01BB457431E}'
# On Fri Aug 31 19:59:39 2018
'WUAPI 2.0 Type Library'
from builtins import str
makepy_version = '0.5.01'
python_version = 0x2070ef0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{B596CC9F-56E5-419E-A622-E01BB457431E}')
MajorVersion = 2
MinorVersion = 0
LibraryFlags = 8
LCID = 0x0

from win32com.client import DispatchBaseClass
class IUpdateCollection(DispatchBaseClass):
	'IUpdateCollection Interface'
	CLSID = IID('{07F7438C-7709-4CA5-B518-91279288134E}')
	coclass_clsid = IID('{13639463-00DB-4646-803D-528026140D88}')

	def Add(self, value=defaultNamedNotOptArg):
		'Adds an item to the collection.'
		return self._oleobj_.InvokeTypes(1610743811, LCID, 1, (3, 0), ((9, 1),),value
			)

	def Clear(self):
		'Removes all elements from the collection.'
		return self._oleobj_.InvokeTypes(1610743812, LCID, 1, (24, 0), (),)

	# Result is of type IUpdateCollection
	def Copy(self):
		'Creates a shallow read-writable copy of the collection.'
		ret = self._oleobj_.InvokeTypes(1610743813, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, u'Copy', '{07F7438C-7709-4CA5-B518-91279288134E}')
		return ret

	def Insert(self, index=defaultNamedNotOptArg, value=defaultNamedNotOptArg):
		'Inserts an item to the collection at the specified position.'
		return self._oleobj_.InvokeTypes(1610743814, LCID, 1, (24, 0), ((3, 1), (9, 1)),index
			, value)

	# Result is of type IUpdate
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, index=defaultNamedNotOptArg):
		'Gets an element in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, u'Item', '{6A92B07A-D821-4682-B423-5C805022CC4D}')
		return ret

	def RemoveAt(self, index=defaultNamedNotOptArg):
		'Removes the item at the specified index from the collection.'
		return self._oleobj_.InvokeTypes(1610743815, LCID, 1, (24, 0), ((3, 1),),index
			)

	# The method SetItem is actually a property, but must be used as a method to correctly pass the arguments
	def SetItem(self, index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Gets an element in the collection.'
		return self._oleobj_.InvokeTypes(0, LCID, 4, (24, 0), ((3, 1), (9, 1)),index
			, arg1)

	_prop_map_get_ = {
		"Count": (1610743809, 2, (3, 0), (), "Count", None),
		"ReadOnly": (1610743810, 2, (11, 0), (), "ReadOnly", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, index=defaultNamedNotOptArg):
		'Gets an element in the collection.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((3, 1),),index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{6A92B07A-D821-4682-B423-5C805022CC4D}')
		return ret

	def __unicode__(self, *args):
		try:
			return str(self.__call__(*args))
		except pythoncom.com_error:
			return repr(self)
	def __str__(self, *args):
		return str(self.__unicode__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{6A92B07A-D821-4682-B423-5C805022CC4D}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1610743809, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __bool__(self):
		return True

win32com.client.CLSIDToClass.RegisterCLSID( "{07F7438C-7709-4CA5-B518-91279288134E}", IUpdateCollection )
# -*- coding: utf-8 -*-
# Created by makepy.py version 0.5.01
# By python version 2.7.14 (v2.7.14:84471935ed, Sep 16 2017, 20:19:30) [MSC v.1500 32 bit (Intel)]
# From type library '{B596CC9F-56E5-419E-A622-E01BB457431E}'
# On Fri Aug 31 19:59:39 2018
'WUAPI 2.0 Type Library'
makepy_version = '0.5.01'
python_version = 0x2070ef0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{B596CC9F-56E5-419E-A622-E01BB457431E}')
MajorVersion = 2
MinorVersion = 0
LibraryFlags = 8
LCID = 0x0

IUpdateCollection_vtables_dispatch_ = 1
IUpdateCollection_vtables_ = [
	(( u'Item' , u'index' , u'retval' , ), 0, (0, (), [ (3, 1, None, None) , 
			(16393, 10, None, "IID('{6A92B07A-D821-4682-B423-5C805022CC4D}')") , ], 1 , 2 , 4 , 0 , 28 , (3, 0, None, None) , 0 , )),
	(( u'Item' , u'index' , u'retval' , ), 0, (0, (), [ (3, 1, None, None) , 
			(9, 1, None, "IID('{6A92B07A-D821-4682-B423-5C805022CC4D}')") , ], 1 , 4 , 4 , 0 , 32 , (3, 0, None, None) , 0 , )),
	(( u'_NewEnum' , u'retval' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 36 , (3, 0, None, None) , 0 , )),
	(( u'Count' , u'retval' , ), 1610743809, (1610743809, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 40 , (3, 0, None, None) , 0 , )),
	(( u'ReadOnly' , u'retval' , ), 1610743810, (1610743810, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 44 , (3, 0, None, None) , 0 , )),
	(( u'Add' , u'value' , u'retval' , ), 1610743811, (1610743811, (), [ (9, 1, None, "IID('{6A92B07A-D821-4682-B423-5C805022CC4D}')") , 
			(16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 48 , (3, 0, None, None) , 0 , )),
	(( u'Clear' , ), 1610743812, (1610743812, (), [ ], 1 , 1 , 4 , 0 , 52 , (3, 0, None, None) , 0 , )),
	(( u'Copy' , u'retval' , ), 1610743813, (1610743813, (), [ (16393, 10, None, "IID('{07F7438C-7709-4CA5-B518-91279288134E}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( u'Insert' , u'index' , u'value' , ), 1610743814, (1610743814, (), [ (3, 1, None, None) , 
			(9, 1, None, "IID('{6A92B07A-D821-4682-B423-5C805022CC4D}')") , ], 1 , 1 , 4 , 0 , 60 , (3, 0, None, None) , 0 , )),
	(( u'RemoveAt' , u'index' , ), 1610743815, (1610743815, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

win32com.client.CLSIDToClass.RegisterCLSID( "{07F7438C-7709-4CA5-B518-91279288134E}", IUpdateCollection )
